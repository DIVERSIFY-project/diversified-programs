{"incrementalSeries":25,"transformations":[{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","position":"org.easymock.internal.ReplayState:149","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","position":"org.easymock.internal.RecordState:86","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","position":"org.easymock.internal.RecordState:96","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:136","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return 0","position":"org.easymock.EasyMock:978","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","position":"org.easymock.internal.ObjectMethodsFilter:86","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"isThreadSafe":"shouldFillInStackTrace"},"name":"replace","transplant":{"sourceCode":"return this.boolean","position":"org.easymock.internal.MocksBehavior:186","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean","position":"org.easymock.internal.Result:109","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"result":"method","bridgeMethod":"method"},"name":"replace","transplant":{"sourceCode":"if (java.lang.reflect.Method == null) {\r\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\r\n} ","position":"org.easymock.internal.BridgeMethodResolver:91","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\r\n    continue;\r\n} ","position":"org.easymock.internal.ReflectionUtils:92","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.Object[] == null) {\r\n    java.lang.Object[] = new java.lang.Object[0];\r\n} ","position":"org.easymock.internal.ArgumentToString:87","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object[] = new java.lang.Object[0]","position":"org.easymock.internal.ArgumentToString:88","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"try {\r\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\r\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\r\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\r\n}","position":"org.easymock.internal.MocksControl:140","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","position":"org.easymock.internal.MocksControl:141","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper","position":"org.easymock.internal.MockInvocationHandler:45","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","position":"org.easymock.internal.EasyMockProperties:63","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","position":"org.easymock.internal.LastControl:37","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Collection<org.easymock.internal.matchers.Captures<?>>.clear()","position":"org.easymock.internal.Invocation:175","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","position":"org.easymock.internal.MocksControl:345","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","position":"org.easymock.internal.MocksControl:214","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.easymock.internal.BridgeMethodResolver:133","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","position":"org.easymock.internal.matchers.Equals:57","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((java.lang.Thread) != java.lang.Thread.(java.lang.Thread.currentThread())) {\r\n    throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError((((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))));\r\n} ","position":"org.easymock.internal.MocksBehavior:196","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError((((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))))","position":"org.easymock.internal.MocksBehavior:197","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","position":"org.easymock.internal.MockInvocationHandler:38","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\r\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\r\n} ","position":"org.easymock.internal.MockInvocationHandler:37","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"try {\r\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\r\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\r\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\r\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\r\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\r\n}","position":"org.easymock.internal.MocksControl:148","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","position":"org.easymock.EasyMock:1861","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.easymock.EasyMock:966","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.AndroidSupport.boolean","position":"org.easymock.internal.AndroidSupport:35","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.easymock.internal.ExpectedInvocation:85","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.easymock.internal.matchers.Any:36","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.io.IOException java.io.IOException","position":"org.easymock.internal.EasyMockProperties:71","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.easymock.internal.IMocksBehavior.isThreadSafe()) {\r\n    java.util.concurrent.locks.ReentrantLock.lock();\r\n    try {\r\n        return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\r\n    } finally {\r\n        java.util.concurrent.locks.ReentrantLock.unlock();\r\n    }\r\n} ","position":"org.easymock.internal.ReplayState:42","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"try {\r\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\r\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\r\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\r\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\r\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\r\n}","position":"org.easymock.internal.MocksControl:148","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","position":"org.easymock.EasyMock:1861","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","position":"org.easymock.internal.LastControl:96","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","position":"org.easymock.internal.LastControl:133","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","position":"org.easymock.internal.LastControl:37","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.Invocation.clearCaptures()","position":"org.easymock.internal.MocksBehavior:106","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.easymock.internal.matchers.Equals:54","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.AndroidSupport.boolean","position":"org.easymock.internal.AndroidSupport:35","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.easymock.internal.ReflectionUtils:165","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this.boolean","position":"org.easymock.internal.MocksBehavior:186","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"java.lang.Integer.MAX_VALUE":"minimum","maximum":"maximum"},"name":"replace","transplant":{"sourceCode":"return (int) == (java.lang.Integer.int)","position":"org.easymock.internal.Range:85","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int) == (int)","position":"org.easymock.internal.Range:52","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.easymock.internal.BridgeMethodResolver:133","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","position":"org.easymock.internal.matchers.Equals:57","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.easymock.EasyMock:966","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.AndroidSupport.boolean","position":"org.easymock.internal.AndroidSupport:35","type":"CtReturnImpl"},"status":0}],"failedTests":[],"id":11,"status":0}