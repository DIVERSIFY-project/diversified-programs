{"transformations":[{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\r\n    continue;\r\n} ","position":"org.easymock.internal.ReflectionUtils:92","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"},"name":"replace","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\r\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\r\n} ","position":"org.easymock.internal.BridgeMethodResolver:276","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\r\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\r\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\r\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\r\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\r\n    } \r\n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\r\n}","position":"org.easymock.internal.BridgeMethodResolver:255","type":"CtWhileImpl"},"status":0},{"failures":[],"variableMapping":{"actual":"expected","expected":"expected"},"name":"replace","transplant":{"sourceCode":"return java.lang.Object.equals(java.lang.Object)","position":"org.easymock.internal.matchers.Equals:40","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:37","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","position":"org.easymock.internal.ClassProxyFactory:185","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","position":"org.easymock.internal.MocksControl:136","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.MockBuilder:126","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.MockBuilder:149","type":"CtThrowImpl"},"status":0}],"failedTests":[],"id":74,"status":0}