{"transformations":[{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type == null) {\r\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\r\n} ","position":"org.easymock.internal.BridgeMethodResolver:325","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"typeVariableMap":"typeVariableMap","this":"this","cls":"type"},"name":"replace","transplant":{"sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","position":"org.easymock.internal.BridgeMethodResolver:249","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\r\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\r\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\r\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\r\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\r\n    } \r\n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\r\n}","position":"org.easymock.internal.BridgeMethodResolver:255","type":"CtWhileImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\r\n    continue;\r\n} ","position":"org.easymock.internal.ReflectionUtils:92","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return null","position":"org.easymock.internal.BridgeMethodResolver:165","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Method","position":"org.easymock.internal.BridgeMethodResolver:71","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.lang.Object != null","position":"org.easymock.internal.matchers.NotNull:36","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:43","type":"CtReturnImpl"},"status":0}],"failedTests":[],"id":71,"status":0}